// todo: allow more stuff as first char of symbol
// todo: support string interpoloation

ometa DSParser {
  
  integer = ^digit+:d                                                         -> [`int, d.join('')],
  
  escapeChar   = '\\' char:c                                                  -> unescape('\\' + c),
  string       = '\'' (escapeChar | ~'\'' char)*:cs '\''                      -> [`str, cs.join('')]
               | '"'  (escapeChar | ~'"'  char)*:cs '"'                       -> [`str, cs.join('')],
  
  idFirst = letter | '_',
  idRest  = idFirst | digit,
  identifier = firstAndRest(`idFirst, `idRest):i                              -> [`idn, i.join('')],
  
  // reduces [`idn, 'foo'] to just `foo
  name = identifier:i                                                         -> i[1],
  
  symbol = ':' identifier:i                                                   -> [`sym, i[1]],
  
  literal = symbol | string | integer,
  
  exp = fcall | vcall | literal,
  exp_end = end | ',' | '\n' | ';' | '}',
  
  // the "inside" part of an array
  list = exp:first ((spaces ',' spaces exp) | (spaces literal))*:rest         -> [`lst, first].concat(rest),
  
  vcall = identifier:i spaces &exp_end                                        -> [`vcall, i[1]],
  
  fcall = name:n ( '(' | spaces ) list:a ( ')' | empty) spaces &exp_end       -> [`fcall, n].concat([a]),
  
  args = name:first ((spaces ',' | empty) spaces name)*:rest                  -> [`args, first].concat(rest),
  
  block = exp,
  
  proc = '{' spaces args:ags spaces '|' spaces block:blk spaces '}'           -> [`proc, ags, blk]
  
  // todo: array literals
  // todo: dct
  // todo: hash literals
  // procs
  
}